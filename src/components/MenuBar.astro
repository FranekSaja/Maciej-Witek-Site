---
// Pasek menu zintegrowany z kolekcją parts
import { getCollection } from 'astro:content';
import path from 'path-browserify';
import ThemeSwitcher from './ThemeSwitcher.astro';

export interface Props {
  currentPage: string;
}

const { currentPage } = Astro.props;

const parts = await getCollection('parts');
const baseUrl = import.meta.env.BASE_URL;

// Normalizujemy ścieżkę, usuwając końcowy ukośnik, jeśli istnieje i nie jest to root.
const normalizedPath = currentPage.length > 1 && currentPage.endsWith('/')
  ? currentPage.slice(0, -1)
  : currentPage;

const tabs = [
  { href: baseUrl, label: 'ABOUT', isActive: normalizedPath === baseUrl || normalizedPath === `${baseUrl}/` },
  ...parts.map((entry) => {
    const href = path.join(baseUrl, entry.slug);
    return {
      href,
      label: entry.data.title,
      isActive: href === normalizedPath
    };
  })
];
---

<!-- Przycisk przełączający menu, widoczny tylko na małych ekranach -->
<button id="menu-toggle" class="menu-toggle" aria-label="Toggle menu" aria-expanded="false">
  <svg class="hamburger-icon" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
    <line x1="3" y1="12" x2="21" y2="12"></line>
    <line x1="3" y1="6" x2="21" y2="6"></line>
    <line x1="3" y1="18" x2="21" y2="18"></line>
  </svg>
</button>

<!-- Kontener menu -->
<div id="menu-container" class="menu-container">
  <nav aria-label="Główne menu" class="main-menu">
    <ul class="menu-list">
      {tabs.map((t) => (
        <li>
          <a href={t.href} class:list={["menu-link", { "is-active": t.isActive }]}>
            {t.label}
          </a>
        </li>
      ))}
    </ul>
  </nav>
  <div class="absolute bottom-4 right-4">
    <ThemeSwitcher />
  </div>
</div>

<style>
  :root {
    --menu-width-lg: clamp(220px, 20vw, 400px);
    --menu-width-sm: 250px; /* Zwężone menu mobilne */
    --menu-border: var(--color-menu-bg);
    --menu-link-hover-bg: var(--color-menu-bg);
    --menu-toggle-bg: var(--color-menu-bg);
  }

  /* --- Style dla dużych ekranów (Desktop) --- */
  .menu-container {
    position: fixed;
    top: 0;
    right: 0;
    height: 100vh;
    width: var(--menu-width-lg);
    display: flex;
    flex-direction: column;
    background-color: var(--color-menu-bg);
    border-left: 1px solid var(--menu-border);
    z-index: 1000;
    transition: transform 0.3s ease-in-out;
    padding: 2rem 0;
  }

  .main-menu {
    width: 100%;
  }

  .menu-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    width: 100%;
  }

  .menu-link {
    display: block;
    padding: 1.575rem 2.5rem;
    width: 100%;
    text-align: left;
    font-size: 1.575rem;
    font-weight: 500;
    text-transform: uppercase;
    color: var(--color-fg);
    text-decoration: none;
    transition: background-color 0.2s, color 0.2s, transform 0.2s ease-out;
  }

  .menu-link:hover,
  .menu-link.is-active {
    transform: scale(1.05) translateY(-2px);
  }

  .menu-link:hover {
    background-color: var(--color-menu-link-hover-bg);
  }

  .menu-link.is-active {
    background-color: var(--color-bg);
  }

  .menu-toggle {
    display: none; /* Ukryj przycisk na dużych ekranach */
  }

  /* --- Style dla małych ekranów (Mobile) --- */
  @media (max-width: 1400px) {
    .menu-toggle {
      display: block; /* Zmieniono na block dla pozycjonowania ikon */
      position: fixed;
      top: 1rem;
      right: 1rem;
      z-index: 1001;
      background-color: transparent;
      border: none;
      padding: 0.5rem;
      cursor: pointer;
      font-size: 1rem;
      color: var(--color-fg);
    }

    .menu-container {
      left: 0;
      right: auto;
      width: var(--menu-width-sm);
      transform: translateX(-100%);
      border-left: none;
      border-right: 1px solid var(--menu-border);
      padding: 4rem 0;
    }

    .menu-toggle .menu-toggle-text {
      display: none; /* Ukrycie tekstu "Menu" */
    }

    .menu-toggle .hamburger-icon,
    .menu-toggle .close-icon {
      transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;
    }


    .menu-list li a {
      font-size: 1.2rem; /* Mniejsza czcionka w menu mobilnym */
    }

    .menu-container.is-open {
      transform: translateX(0);
    }
  }


  .menu-link.is-active {
    background-color: var(--color-bg);
  }

  .menu-toggle {
    background-color: var(--menu-toggle-bg);
    border-color: var(--menu-border);
    color: var(--color-fg);
  }
</style>

<script>
  const menuToggle = document.getElementById('menu-toggle');
  const menuContainer = document.getElementById('menu-container');

  function openMenu() {
    if (!menuToggle || !menuContainer) return;
    menuContainer.classList.add('is-open');
    menuToggle.setAttribute('aria-expanded', 'true');
  }

  function closeMenu() {
    if (!menuToggle || !menuContainer) return;
    menuContainer.classList.remove('is-open');
    menuToggle.setAttribute('aria-expanded', 'false');
  }

  function handleMenu() {
    if (!menuContainer) return;
    if (menuContainer.classList.contains('is-open')) {
      closeMenu();
    } else {
      openMenu();
    }
  }

  function setupMenu() {
    if (!menuToggle || !menuContainer) return;

    menuToggle.addEventListener('click', handleMenu);

    // Zamykanie po kliknięciu na link
    const menuLinks = menuContainer.querySelectorAll('a');
    menuLinks.forEach(link => {
      link.addEventListener('click', closeMenu);
    });

    // Zamykanie po kliknięciu poza menu
    document.addEventListener('click', (event) => {
      if (!menuContainer.contains(event.target as Node) && !menuToggle.contains(event.target as Node) && menuContainer.classList.contains('is-open')) {
        closeMenu();
      }
    });
  }

  // Inicjalizacja na start i po każdej zmianie strony
  document.addEventListener('DOMContentLoaded', setupMenu);
  document.addEventListener('astro:page-load', setupMenu);
</script>
